classdef reverberatorPlugin < audioPlugin & matlab.System
    % reverberatorPlugin is a basic example of the reverberator system
    % object being used in an audio plugin class
    
    properties
        PreDelay = 0
        HighCutFrequency = 20000
        Diffusion = 0.5
        DecayFactor = 0.5
        HighFrequencyDamping = 0.0005
        WetDryMix = 0.3
    end
    properties (Access = private)
        SampleRate = 44100
        reverb
    end
    properties (Constant)
        PluginInterface = audioPluginInterface( ...  
            audioPluginParameter('PreDelay', ...         
                'DisplayName','Pre Delay', ...           
                'Mapping',{'lin',0,1},...
                'Label','Seconds'),...
            audioPluginParameter('HighCutFrequency', ...         
                'DisplayName','High Cut Frequency', ...           
                'Mapping',{'lin',0,20000}, ...
                'Label','Hz'),...
            audioPluginParameter('Diffusion', ...         
                'DisplayName','Diffusion', ...           
                'Mapping',{'lin',0,1}),...
            audioPluginParameter('DecayFactor', ...         
                'DisplayName','Decay Factor', ...           
                'Mapping',{'lin',0,1}),...
            audioPluginParameter('HighFrequencyDamping', ...         
                'DisplayName','High Frequency Damping', ...           
                'Mapping',{'lin',0,1}),...
            audioPluginParameter('WetDryMix', ...         
                'DisplayName','Wet Dry Mix', ...           
                'Mapping',{'lin',0,1})...
                )   
    end
    methods (Access = protected)
        function out = stepImpl(plugin,in)
            out = plugin.reverb(in);
        end
        function resetImpl(plugin)
            plugin.SampleRate = plugin.getSampleRate();
        end  
    end
    methods
        function plugin = reverberatorPlugin()
            plugin.reverb = reverberator();
        end        
        % function set.PreDelay(plugin, val)
        %     % This section contains instructions to execute if the specified
        %     % property is modified. Properties associated with parameters are updated
        %     % automatically. Use the set method to execute more complicated
        %     % instructions.
        % end
        % function set.SampleRate(plugin,val)
        %     plugin.SampleRate = val;
        % end
    end
end